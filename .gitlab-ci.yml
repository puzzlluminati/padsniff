image: python:3.6-alpine

stages:
  - build
  - test
  - publish

variables:
  LDFLAGS: -L/lib
  WHEELHOUSE: vendor/pip/wheels

cache:
  key: "$CI_COMMIT_REF_NAME"
  paths:
    - "$WHEELHOUSE"

build:
  stage: build
  script:
    - apk add --no-cache g++ libffi-dev libstdc++ openssl-dev
    - pip wheel -r requirements.txt -f "$WHEELHOUSE" -w "$WHEELHOUSE"

test:
  stage: test
  before_script:
    - apk add --no-cache libffi libstdc++ openssl make
    - pip install -r requirements.txt --no-index -f "$WHEELHOUSE"
  script: make test

.publish: &publish
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker pull "$CI_REGISTRY_IMAGE:$IMAGE_TAG" || true
    - docker pull "$CI_REGISTRY_IMAGE:latest" || true
    - docker build --cache-from "$CI_REGISTRY_IMAGE:$IMAGE_TAG" --cache-from "$CI_REGISTRY_IMAGE:latest" -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE"

publish-branch:
  stage: publish
  <<: *publish
  variables:
    IMAGE_TAG: "$CI_COMMIT_REF_NAME"
  only:
    - master
    - develop
    - gitlab-migration

publish-latest:
  stage: publish
  <<: *publish
  variables:
    IMAGE_TAG: latest
  only:
    - develop

publish-tag:
  stage: publish
  <<: *publish
  variables:
    IMAGE_TAG: "$CI_COMMIT_TAG"
  only:
    - tags
